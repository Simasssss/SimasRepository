@page "/TemplateForPost"
@using Hand_In_1_Simas_DNP.Entities.Models
@using Hand_In_1_Simas_DNP.Authentication
@using System.Security.Claims
@inject IAuthService authService
@inject NavigationManager navMgr

<AuthorizeView>
    <Authorized>
        <div class="card" style="width: 40rem; border: 0.1rem solid darkblue;">
            <div class="form-group card-body">
                <h3>Create Post</h3>
                <br>
                <div class="row">
                    <label>Title:</label>
                    <div class="col-4">
                        <input type="title" placeholder="Enter title" @bind="title"/>
                    </div>
                </div>
                <br/>
                    
                <div class="row">
                    <div class="col-4">
                        <label>Text:</label>
                        <div class="col-12">
                            <textarea class="form-control" rows="10" type="body" placeholder="Enter Text" @bind="body"/>
                        </div>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="field">
                        <label style="color: red">
                            @errorLabel
                        </label>
                    </div>
                }
                <br/>
                <div class="field">
                    <button class="button btn-dark" @onclick="CreatePostAsync">Create Post</button>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <a>You have to be logged in if you want to see this page</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string title;
    private string body;
    private string errorLabel;
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!; 
    
    
    private async Task CreatePostAsync()
    {
        
        errorLabel = "";
        try
        {
            
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;
            await authService.CreatePostAsync(title, body, user.Identity.Name);
        
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            errorLabel = $"Error: {e.Message}";
        }
    }
    
}